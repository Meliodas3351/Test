package com.company;
//Сортировка вставками. Дана последовательность чисел
//n a ,a , ,a 1 2 
//. Требуется переставить числа в порядке
//возрастания. Делается это следующим образом. Пусть
//a a ai
//, , , 1 2  - упорядоченная последовательность, т. е.
//a1  a2  an
//. Берется следующее число
//i+1 a
//и вставляется в последовательность так, чтобы новая
//последовательность была тоже возрастающей. Процесс производится до тех пор, пока все элементы от i +1 до n
//не будут перебраны. Примечание. Место помещения очередного элемента в отсортированную часть производить
//с помощью двоичного поиска. Двоичный поиск оформить в виде отдельной функции.


import java.util.Arrays;
import java.util.Scanner;

public class SortFive {
    int a[];
    int n, temp;


    public void getSort() {
        Scanner sc = new Scanner(System.in);
        System.out.println("n=");
        n = sc.nextInt();
        a = new int[n];

        System.out.println("The one массив: ");
        for (int i = 0; i < n; i++) {
            a[i] = (int) (Math.random() * 11);
            System.out.print(a[i] + "|");
        }
        System.out.println('\n');

        for (int left = 0; left < a.length; left++) {           //Хер его знает как работает!?
            // Вытаскиваем значение элемента
            int value = a[left];
            // Перемещаемся по элементам, которые перед вытащенным элементом
            int i = left - 1;
            for (; i >= 0; i--) {
                // Если вытащили значение меньшее — передвигаем больший элемент дальше
                if (value < a[i]) {
                    a[i + 1] = a[i];
                } else {
                    // Если вытащенный элемент больше — останавливаемся
                    break;
                }
            }
            // В освободившееся место вставляем вытащенное значение
            a[i + 1] = value;
        }
        System.out.println(Arrays.toString(a));
    }
}